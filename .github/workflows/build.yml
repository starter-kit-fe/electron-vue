name: Electron Cross-Platform Build

on:
  push:
    tags:
      - "v*" # Trigger when pushing version tags

jobs:
  prepare-dist:
    name: Prepare Dist Package
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Get Package Version
        id: package-version
        run: |
          echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Install Dependencies
        run: npm ci

      - name: Build Dist
        run: npm run build

      - name: Compress Dist
        run: |
          tar -czvf dist-${{ steps.package-version.outputs.VERSION }}.tar.gz dist
          mkdir -p artifact-dist
          mv dist-${{ steps.package-version.outputs.VERSION }}.tar.gz artifact-dist/

      - name: Upload Dist Artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-package
          path: artifact-dist/
          retention-days: 5

  build-app:
    name: Build Electron App
    needs: prepare-dist
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: mac
          - os: windows-latest
            platform: windows

    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Get Package Version
        id: package-version
        run: |
          echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
        shell: bash

      - name: Install Dependencies
        run: npm ci

      - name: Build Electron App
        run: npm run build:app
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload App Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}-app
          path: |
            release/${{ steps.package-version.outputs.VERSION }}/*.exe
            release/${{ steps.package-version.outputs.VERSION }}/*.dmg
            release/${{ steps.package-version.outputs.VERSION }}/*.AppImage
            release/${{ steps.package-version.outputs.VERSION }}/*.zip
          retention-days: 5

  release:
    name: Create GitHub Release
    needs: [prepare-dist, build-app]
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Get Package Version
        id: package-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Download All Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.package-version.outputs.VERSION }}
          name: Release ${{ steps.package-version.outputs.VERSION }}
          files: |
            artifacts/dist-package/dist-${{ steps.package-version.outputs.VERSION }}.tar.gz
            artifacts/linux-app/**/${{ steps.package-version.outputs.VERSION }}/*.AppImage
            artifacts/mac-app/**/${{ steps.package-version.outputs.VERSION }}/*.dmg
            artifacts/windows-app/**/${{ steps.package-version.outputs.VERSION }}/*.exe
            artifacts/*/release/${{ steps.package-version.outputs.VERSION }}/*.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
